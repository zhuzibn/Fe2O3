%%field calculation
mmx_0p1=circshift(mmxtmp,[0,1]); %[0 1]  shift right one position
mmy_0p1=circshift(mmytmp,[0,1]);
mmz_0p1=circshift(mmztmp,[0,1]);

mmx_p1n1=circshift(mmxtmp,[1,-1]);
mmy_p1n1=circshift(mmytmp,[1,-1]);
mmz_p1n1=circshift(mmztmp,[1,-1]);

mmx_n1n1=circshift(mmxtmp,[-1,-1]);
mmy_n1n1=circshift(mmytmp,[-1,-1]);
mmz_n1n1=circshift(mmztmp,[-1,-1]);

mmx_0n1=circshift(mmxtmp,[0,-1]);
mmy_0n1=circshift(mmytmp,[0,-1]);
mmz_0n1=circshift(mmztmp,[0,-1]);

mmx_n1p1=circshift(mmxtmp,[-1,1]);
mmy_n1p1=circshift(mmytmp,[-1,1]);
mmz_n1p1=circshift(mmztmp,[-1,1]);

mmx_0n2=circshift(mmxtmp,[0,-2]);
mmy_0n2=circshift(mmytmp,[0,-2]);
mmz_0n2=circshift(mmztmp,[0,-2]);

mmx_p10=circshift(mmxtmp,[1,0]);%[1 0]  shift down one position
mmy_p10=circshift(mmytmp,[1,0]);
mmz_p10=circshift(mmztmp,[1,0]);

mmx_n10=circshift(mmxtmp,[-1,0]);
mmy_n10=circshift(mmytmp,[-1,0]);
mmz_n10=circshift(mmztmp,[-1,0]);

mmx_p1p1=circshift(mmxtmp,[1,1]);
mmy_p1p1=circshift(mmytmp,[1,1]);
mmz_p1p1=circshift(mmztmp,[1,1]);

mmx_0p2=circshift(mmxtmp,[0,2]);
mmy_0p2=circshift(mmytmp,[0,2]);
mmz_0p2=circshift(mmztmp,[0,2]);

for i=1:natomH
    switch mod(i-1,3)
        case 0
            %% calculate J1
            % green atom in the 1st layer don't have J1
            if i==1
                mmxtmpJ1(:,:,i)=atomtype_layer1or.*mmxtmp(:,:,i+1);
                mmytmpJ1(:,:,i)=atomtype_layer1or.*mmytmp(:,:,i+1);
                mmztmpJ1(:,:,i)=atomtype_layer1or.*mmztmp(:,:,i+1);
            else
                mmxtmpJ1(:,:,i)=atomtype_layer1gr.*mmxtmp(:,:,i-1)+atomtype_layer1or.*mmxtmp(:,:,i+1);
                mmytmpJ1(:,:,i)=atomtype_layer1gr.*mmytmp(:,:,i-1)+atomtype_layer1or.*mmytmp(:,:,i+1);
                mmztmpJ1(:,:,i)=atomtype_layer1gr.*mmztmp(:,:,i-1)+atomtype_layer1or.*mmztmp(:,:,i+1);
            end
            %% calculate J2
            %J2 experienced by green atoms
            shift_matx_gr=atomtype_layer1gr.*(mmx_0n2(:,:,i)+mmx_p10(:,:,i)...
                +mmx_n10(:,:,i));
            shift_maty_gr=atomtype_layer1gr.*(mmy_0n2(:,:,i)+mmy_p10(:,:,i)...
                +mmy_n10(:,:,i));
            shift_matz_gr=atomtype_layer1gr.*(mmz_0n2(:,:,i)+mmz_p10(:,:,i)...
                +mmz_n10(:,:,i));
            %J2 experienced by orange atoms
            shift_matx_or=atomtype_layer1or.*(mmx_0p2(:,:,i)+mmx_p10(:,:,i)+...
                mmx_n10(:,:,i));
            shift_maty_or=atomtype_layer1or.*(mmy_0p2(:,:,i)+mmy_p10(:,:,i)+...
                mmy_n10(:,:,i));
            shift_matz_or=atomtype_layer1or.*(mmz_0p2(:,:,i)+mmz_p10(:,:,i)+...
                mmz_n10(:,:,i));

            mmxtmpJ2(:,:,i)=shift_matx_gr+shift_matx_or;
            mmytmpJ2(:,:,i)=shift_maty_gr+shift_maty_or;
            mmztmpJ2(:,:,i)=shift_matz_gr+shift_matz_or;

            %% calculate J3
            %J3 experienced by green atoms
            shift_matx_gr=atomtype_layer1gr.*(mmx_0p1(:,:,i+1)+mmx_n1n1(:,:,i+1)+...
                mmx_p1n1(:,:,i+1));
            shift_maty_gr=atomtype_layer1gr.*(mmy_0p1(:,:,i+1)+mmy_n1n1(:,:,i+1)+...
                mmy_p1n1(:,:,i+1));
            shift_matz_gr=atomtype_layer1gr.*(mmz_0p1(:,:,i+1)+mmz_n1n1(:,:,i+1)+...
                mmz_p1n1(:,:,i+1));
            %J3 experienced by orange atoms
            if i==1
                shift_matx_or=0;
                shift_maty_or=0;
                shift_matz_or=0;
            else
                shift_matx_or=(atomtype_layer1or.*(mmx_0n1(:,:,i-1)+mmx_n1p1(:,:,i-1)+...
                    mmx_p1p1(:,:,i-1)));
                shift_maty_or=(atomtype_layer1or.*(mmy_0n1(:,:,i-1)+mmy_n1p1(:,:,i-1)+...
                    mmy_p1p1(:,:,i-1)));
                shift_matz_or=(atomtype_layer1or.*(mmz_0n1(:,:,i-1)+mmz_n1p1(:,:,i-1)+...
                    mmz_p1p1(:,:,i-1)));
            end
            mmxtmpJ3(:,:,i)=shift_matx_gr+shift_matx_or;
            mmytmpJ3(:,:,i)=shift_maty_gr+shift_maty_or;
            mmztmpJ3(:,:,i)=shift_matz_gr+shift_matz_or;

            %% calculate J4
            %J4 experienced by green atoms
            if i==1
                shift_matx_gr=atomtype_layer1gr.*(mmx_0n2(:,:,i+1)+...
                    mmx_p10(:,:,i+1)+mmx_n10(:,:,i+1));
                shift_maty_gr=atomtype_layer1gr.*(mmy_0n2(:,:,i+1)+...
                    mmy_p10(:,:,i+1)+mmy_n10(:,:,i+1));
                shift_matz_gr=atomtype_layer1gr.*(mmz_0n2(:,:,i+1)+...
                    mmz_p10(:,:,i+1)+mmz_n10(:,:,i+1));
                %J4 experienced by orange atoms
                shift_matx_or=atomtype_layer1or.*(mmx_0n1(:,:,i+1)+...
                    mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1));
                shift_maty_or=atomtype_layer1or.*(mmy_0n1(:,:,i+1)+...
                    mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1));
                shift_matz_or=atomtype_layer1or.*(mmz_0n1(:,:,i+1)+...
                    mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1));
            else
                shift_matx_gr=atomtype_layer1gr.*(mmx_0n2(:,:,i+1)+...
                    mmx_p10(:,:,i+1)+mmx_n10(:,:,i+1)+(mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1)));
                shift_maty_gr=atomtype_layer1gr.*(mmy_0n2(:,:,i+1)+...
                    mmy_p10(:,:,i+1)+mmy_n10(:,:,i+1)+(mmy_0p1(:,:,i-1)+...
                    mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1)));
                shift_matz_gr=atomtype_layer1gr.*(mmz_0n2(:,:,i+1)+...
                    mmz_p10(:,:,i+1)+mmz_n10(:,:,i+1)+(mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1)));
                %J4 experienced by orange atoms
                shift_matx_or=atomtype_layer1or.*(mmx_0n1(:,:,i+1)+...
                    mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1)+(mmx_0p2(:,:,i-1)+...
                    mmx_n10(:,:,i-1)+mmx_p10(:,:,i-1)));
                shift_maty_or=atomtype_layer1or.*(mmy_0n1(:,:,i+1)+...
                    mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1)+ (mmy_0p2(:,:,i-1)+...
                    mmy_n10(:,:,i-1)+mmy_p10(:,:,i-1)));
                shift_matz_or=atomtype_layer1or.*(mmz_0n1(:,:,i+1)+...
                    mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1)+(mmz_0p2(:,:,i-1)+...
                    mmz_n10(:,:,i-1)+mmz_p10(:,:,i-1)));
            end
            mmxtmpJ4(:,:,i)=shift_matx_gr+shift_matx_or;
            mmytmpJ4(:,:,i)=shift_maty_gr+shift_maty_or;
            mmztmpJ4(:,:,i)=shift_matz_gr+shift_matz_or;

        case 1
            %% calculate J1
            mmxtmpJ1(:,:,i)=atomtype_layer2p.*mmxtmp(:,:,i+1)+atomtype_layer2blue.*mmxtmp(:,:,i-1);
            mmytmpJ1(:,:,i)=atomtype_layer2p.*mmytmp(:,:,i+1)+atomtype_layer2blue.*mmytmp(:,:,i-1);
            mmztmpJ1(:,:,i)=atomtype_layer2p.*mmztmp(:,:,i+1)+atomtype_layer2blue.*mmztmp(:,:,i-1);

            %% calculate J2
            %J2 experienced by blue atoms
            shift_matx_blue=atomtype_layer2blue.*(mmx_0n1(:,:,i)+mmx_n1p1(:,:,i)+...
                mmx_p1p1(:,:,i));
            shift_maty_blue=atomtype_layer2blue.*(mmy_0n1(:,:,i)+mmy_n1p1(:,:,i)+...
                mmy_p1p1(:,:,i));
            shift_matz_blue=atomtype_layer2blue.*(mmz_0n1(:,:,i)+mmz_n1p1(:,:,i)+...
                mmz_p1p1(:,:,i));

            %J2 experienced by purple atoms
            shift_matx_purple=atomtype_layer2p.*(mmx_0p1(:,:,i)+mmx_n1n1(:,:,i)+...
                mmx_p1n1(:,:,i));
            shift_maty_purple=atomtype_layer2p.*(mmy_0p1(:,:,i)+mmy_n1n1(:,:,i)+...
                mmy_p1n1(:,:,i));
            shift_matz_purple=atomtype_layer2p.*(mmz_0p1(:,:,i)+mmz_n1n1(:,:,i)+...
                mmz_p1n1(:,:,i));

            mmxtmpJ2(:,:,i)=shift_matx_blue+shift_matx_purple;
            mmytmpJ2(:,:,i)=shift_maty_blue+shift_maty_purple;
            mmztmpJ2(:,:,i)=shift_matz_blue+shift_matz_purple;

            %% calculate J3
            %J3 experienced by blue atoms
            shift_matx_blue=atomtype_layer2blue.*(mmx_0p2(:,:,i+1)+mmx_n10(:,:,i+1)+...
                mmx_p10(:,:,i+1));
            shift_maty_blue=atomtype_layer2blue.*(mmy_0p2(:,:,i+1)+mmy_n10(:,:,i+1)+...
                mmy_p10(:,:,i+1));
            shift_matz_blue=atomtype_layer2blue.*(mmz_0p2(:,:,i+1)+mmz_n10(:,:,i+1)+...
                mmz_p10(:,:,i+1));
            %J3 experienced by purple atoms
            shift_matx_purple=atomtype_layer2p.*(mmx_0n1(:,:,i-1)+mmx_n1p1(:,:,i-1)+...
                mmx_p1p1(:,:,i-1));
            shift_maty_purple=atomtype_layer2p.*(mmy_0n1(:,:,i-1)+mmy_n1p1(:,:,i-1)+...
                mmy_p1p1(:,:,i-1));
            shift_matz_purple=atomtype_layer2p.*(mmz_0n1(:,:,i-1)+mmz_n1p1(:,:,i-1)+...
                mmz_p1p1(:,:,i-1));

            mmxtmpJ3(:,:,i)=shift_matx_blue+shift_matx_purple;
            mmytmpJ3(:,:,i)=shift_maty_blue+shift_maty_purple;
            mmztmpJ3(:,:,i)=shift_matz_blue+shift_matz_purple;

            %% calculate J4
            %J4 experienced by blue atoms
            shift_matx_blue=atomtype_layer2blue.*(mmx_0n1(:,:,i+1)+...
                mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1)+mmx_0p2(:,:,i-1)+...
                mmx_n10(:,:,i-1)+mmx_p10(:,:,i-1));
            shift_maty_black=atomtype_layer2blue.*(mmy_0n1(:,:,i+1)+...
                mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1)+mmy_0p2(:,:,i-1)+...
                mmy_n10(:,:,i-1)+mmy_p10(:,:,i-1));
            shift_matz_black=atomtype_layer2blue.*(mmz_0n1(:,:,i+1)+...
                mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1)+mmz_0p2(:,:,i-1)+...
                mmz_n10(:,:,i-1)+mmz_p10(:,:,i-1));
            %J4 experienced by purple atoms
            shift_matx_purple=atomtype_layer2p.*(mmx_0n1(:,:,i+1)+...
                mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1)+mmx_0p1(:,:,i-1)+...
                mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1));
            shift_maty_purple=atomtype_layer2p.*(mmy_0n1(:,:,i+1)+...
                mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1)+mmy_0p1(:,:,i-1)+...
                mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1));
            shift_matz_purple=atomtype_layer2p.*(mmz_0n1(:,:,i+1)+...
                mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1)+mmz_0p1(:,:,i-1)+...
                mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1));

            mmxtmpJ4(:,:,i)=shift_matx_blue+shift_matx_purple;
            mmytmpJ4(:,:,i)=shift_maty_black+shift_maty_purple;
            mmztmpJ4(:,:,i)=shift_matz_black+shift_matz_purple;

        case 2
            %% calculate J1
            if i==natomH
                mmxtmpJ1(:,:,i)=atomtype_layer3black.*mmxtmp(:,:,i-1);
                mmytmpJ1(:,:,i)=atomtype_layer3black.*mmytmp(:,:,i-1);
                mmztmpJ1(:,:,i)=atomtype_layer3black.*mmztmp(:,:,i-1);
            else
                mmxtmpJ1(:,:,i)=(atomtype_layer3red.*mmxtmp(:,:,i+1))+atomtype_layer3black.*mmxtmp(:,:,i-1);
                mmytmpJ1(:,:,i)=(atomtype_layer3red.*mmytmp(:,:,i+1))+atomtype_layer3black.*mmytmp(:,:,i-1);
                mmztmpJ1(:,:,i)=(atomtype_layer3red.*mmztmp(:,:,i+1))+atomtype_layer3black.*mmztmp(:,:,i-1);
            end
            %% calculate J2
            %J2 experienced by black atoms
            shift_matx_black=atomtype_layer3black.*(mmx_0n1(:,:,i)+mmx_n1p1(:,:,i)+...
                mmx_p1p1(:,:,i));
            shift_maty_black=atomtype_layer3black.*(mmy_0n1(:,:,i)+mmy_n1p1(:,:,i)+...
                mmy_p1p1(:,:,i));
            shift_matz_black=atomtype_layer3black.*(mmz_0n1(:,:,i)+mmz_n1p1(:,:,i)+...
                mmz_p1p1(:,:,i));
            %J2 experienced by red atoms
            shift_matx_red=atomtype_layer3red.*(mmx_0p1(:,:,i)+mmx_n1n1(:,:,i)+...
                mmx_p1n1(:,:,i));
            shift_maty_red=atomtype_layer3red.*(mmy_0p1(:,:,i)+mmy_n1n1(:,:,i)+...
                mmy_p1n1(:,:,i));
            shift_matz_red=atomtype_layer3red.*(mmz_0p1(:,:,i)+mmz_n1n1(:,:,i)+...
                mmz_p1n1(:,:,i));

            mmxtmpJ2(:,:,i)=shift_matx_black+shift_matx_red;
            mmytmpJ2(:,:,i)=shift_maty_black+shift_maty_red;
            mmztmpJ2(:,:,i)=shift_matz_black+shift_matz_red;

            %% calculate J3
            %J3 for red atoms
            shift_matx_red=atomtype_layer3red.*(mmx_0n2(:,:,i-1)+mmx_n10(:,:,i-1)+...
                mmx_p10(:,:,i-1));
            shift_maty_red=atomtype_layer3red.*(mmy_0n2(:,:,i-1)+mmy_n10(:,:,i-1)+...
                mmy_p10(:,:,i-1));
            shift_matz_red=atomtype_layer3red.*(mmz_0n2(:,:,i-1)+mmz_n10(:,:,i-1)+...
                mmz_p10(:,:,i-1));
            %J3 for black atoms
            if i==natomH
                shift_matx_black=0;
                shift_maty_black=0;
                shift_matz_black=0;
            else
                shift_matx_black=atomtype_layer3black.*(mmx_0p1(:,:,i+1)+mmx_n1n1(:,:,i+1)+...
                    mmx_p1n1(:,:,i+1));
                shift_maty_black=atomtype_layer3black.*(mmy_0p1(:,:,i+1)+mmy_n1n1(:,:,i+1)+...
                    mmy_p1n1(:,:,i+1));
                shift_matz_black=atomtype_layer3black.*(mmz_0p1(:,:,i+1)+mmz_n1n1(:,:,i+1)+...
                    mmz_p1n1(:,:,i+1));
            end
            mmxtmpJ3(:,:,i)=shift_matx_red+shift_matx_black;
            mmytmpJ3(:,:,i)=shift_maty_red+shift_maty_black;
            mmztmpJ3(:,:,i)=shift_matz_red+shift_matz_black;

            %% calculate J4
            %J4 experienced by black atoms
            if i==natomH
                shift_matx_black=atomtype_layer3black.*(mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1));
                shift_maty_black=atomtype_layer3black.*(mmy_0p1(:,:,i-1)+...
                    mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1));
                shift_matz_black=atomtype_layer3black.*(mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1));
                %J4 experienced by red atoms
                shift_matx_red=atomtype_layer3red.*(mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1));
                shift_maty_red=atomtype_layer3red.*(mmy_0p1(:,:,i-1)+mmy_n1n1(:,:,i-1)+...
                    mmy_p1n1(:,:,i-1));
                shift_matz_red=atomtype_layer3red.*(mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1));
            else
                shift_matx_black=atomtype_layer3black.*((mmx_0n1(:,:,i+1)+...
                    mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1))+mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1));
                shift_maty_black=atomtype_layer3black.*((mmy_0n1(:,:,i+1)+...
                    mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1))+mmy_0p1(:,:,i-1)+...
                    mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1));
                shift_matz_black=atomtype_layer3black.*((mmz_0n1(:,:,i+1)+...
                    mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1))+mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1));
                %J4 experienced by red atoms
                shift_matx_red=atomtype_layer3red.*((mmx_p10(:,:,i+1)+...
                    mmx_n10(:,:,i+1)+mmx_0n2(:,:,i+1))+mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1));
                shift_maty_red=atomtype_layer3red.*((mmy_p10(:,:,i+1)+...
                    mmy_n10(:,:,i+1)+mmy_0n2(:,:,i+1))+mmy_0p1(:,:,i-1)+mmy_n1n1(:,:,i-1)+...
                    mmy_p1n1(:,:,i-1));
                shift_matz_red=atomtype_layer3red.*((mmz_p10(:,:,i+1)+...
                    mmz_n10(:,:,i+1)+ mmz_0n2(:,:,i+1))+mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1));
            end
            mmxtmpJ4(:,:,i)=shift_matx_black+shift_matx_red;
            mmytmpJ4(:,:,i)=shift_maty_black+shift_maty_red;
            mmztmpJ4(:,:,i)=shift_matz_black+shift_matz_red;
        otherwise
            error('unexpected index');
    end
end


mmxtmpJ1=mmxtmpJ1.*atomtype_;
mmytmpJ1=mmytmpJ1.*atomtype_;
mmztmpJ1=mmztmpJ1.*atomtype_;

mmxtmpJ2=mmxtmpJ2.*atomtype_;
mmytmpJ2=mmytmpJ2.*atomtype_;
mmztmpJ2=mmztmpJ2.*atomtype_;

mmxtmpJ3=mmxtmpJ3.*atomtype_;
mmytmpJ3=mmytmpJ3.*atomtype_;
mmztmpJ3=mmztmpJ3.*atomtype_;

mmxtmpJ4=mmxtmpJ4.*atomtype_;
mmytmpJ4=mmytmpJ4.*atomtype_;
mmztmpJ4=mmztmpJ4.*atomtype_;

hex_x=-(J1.*mmxtmpJ1+J2.*(mmxtmpJ2)+J3.*(mmxtmpJ3)+J4.*(mmxtmpJ4))./muigpu;%[T]
hex_y=-(J1.*mmytmpJ1+J2.*(mmytmpJ2)+J3.*(mmytmpJ3)+J4.*(mmytmpJ4))./muigpu;%[T]
hex_z=-(J1.*mmztmpJ1+J2.*(mmztmpJ2)+J3.*(mmztmpJ3)+J4.*(mmztmpJ4))./muigpu;%[T]
%% calcuation for anisotropy field


cosphi=mmxtmp./sin(acos(mmztmp));
sinphi=mmytmp./sin(acos(mmztmp));
sintheta=sin(acos(mmztmp));
costheta=mmztmp;

hk_x=hk6.*(6.*sintheta.^5.*2.*cosphi.*sinphi.*(2.*sinphi+1).*(2.*sinphi-1).*(-3+4.*sinphi.^2).*sinphi);
hk_y=hk6.*(-6.*sintheta.^5*2.*cosphi.*sinphi.*(2.*sinphi+1).*(2.*sinphi-1).*(-3+4.*sinphi.^2).*cosphi);
hk_z=hk6.*(-6.*costheta.*sintheta.^4.*(-1+2.*cosphi.^2).*(16.*cosphi.^4-16.*cosphi.^2+1));
mask=~(abs(mmztmp)==1);
hk_x2=mask.*hk_x;
hk_y2=mask.*hk_y;
hk_z2=mask.*hk_z;
hani_x=hk_x2./muigpu;
hani_y=hk_y2./muigpu;
hani_z=2*Ksim1./muigpu.*mmztmp+hk_z2./muigpu;%+4*Ksim2./muigpu.*mmztmp.^3;%[T]
%% calcuation for DMI field
if DMIenable
    %%Cauclation for DMI 2024_3_25
    %%The i+1 in this code correlated to i-1 in the reality system
    %%This is actucally the mix of J3 and J4 in exchange.m
    %% next means the layer in positive z direction(i-1 in the code)
    %% pre means the layer in negative z direction(i+1 in the code)
    for i=1:natomH
        switch mod(i-1,3)
            case 0 %%tpye layer 1
                % pre means i+1 layer
                % nex means i-1 layer
                if i==1%layer 1 do not have the i-1 layer interaction
                    mmxtmpd_nex(:,:,i)=0;
                    mmytmpd_nex(:,:,i)=0;
                    mmztmpd_nex(:,:,i)=0;
                else
                    mmxtmpd_nex(:,:,i)=(atomtype_layer1or.*(mmx_0n1(:,:,i-1) ...
                        +mmx_n1p1(:,:,i-1)+mmx_p1p1(:,:,i-1)-mmx_0p2(:,:,i-1)-...
                        mmx_n10(:,:,i-1)-mmx_p10(:,:,i-1))+atomtype_layer1gr.*...
                        (mmx_0p1(:,:,i-1)+mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1)-mmx(:,:,i-1)));

                    mmytmpd_nex(:,:,i)=(atomtype_layer1or.*(mmy_0n1(:,:,i-1)+ ...
                        mmy_n1p1(:,:,i-1)+mmy_p1p1(:,:,i-1)-mmy_0p2(:,:,i-1)-...
                        mmy_n10(:,:,i-1)-mmy_p10(:,:,i-1))+atomtype_layer1gr.* ...
                        (mmy_0p1(:,:,i-1)+mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1)-mmy(:,:,i-1)));

                    mmztmpd_nex(:,:,i)=(atomtype_layer1or.*(mmz_0n1(:,:,i-1)+ ...
                        mmz_n1p1(:,:,i-1)+mmz_p1p1(:,:,i-1)-mmz_0p2(:,:,i-1)-...
                        mmz_n10(:,:,i-1)-mmz_p10(:,:,i-1))+atomtype_layer1gr.* ...
                        (mmz_0p1(:,:,i-1)+mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1)-mmz(:,:,i-1)));
                end
                mmxtmpd_pre(:,:,i)=atomtype_layer1gr.*(-mmx_0p1(:,:,i+1)-...
                    mmx_n1n1(:,:,i+1)-mmx_p1n1(:,:,i+1)+mmx_0n2(:,:,i+1)+...
                    mmx_p10(:,:,i+1)+mmx_n10(:,:,i+1))-atomtype_layer1or.*...
                    (mmx_0n1(:,:,i+1)+mmx_p1p1(:,:,i+1)+mmx_n1p1(:,:,i+1)-mmx(:,:,i+1));

                mmytmpd_pre(:,:,i)=atomtype_layer1gr.*(-mmy_0p1(:,:,i+1)-...
                    mmy_n1n1(:,:,i+1)-mmy_p1n1(:,:,i+1)+mmy_0n2(:,:,i+1)+...
                    mmy_p10(:,:,i+1)+mmy_n10(:,:,i+1))-atomtype_layer1or.* ...
                    (mmy_0n1(:,:,i+1)+mmy_p1p1(:,:,i+1)+mmy_n1p1(:,:,i+1)-mmy(:,:,i+1));

                mmztmpd_pre(:,:,i)=atomtype_layer1gr.*(-mmz_0p1(:,:,i+1)-...
                    mmz_n1n1(:,:,i+1)-mmz_p1n1(:,:,i+1)+mmz_0n2(:,:,i+1)+...
                    mmz_p10(:,:,i+1)+mmz_n10(:,:,i+1))-atomtype_layer1or.* ...
                    (mmz_0n1(:,:,i+1)+mmz_p1p1(:,:,i+1)+mmz_n1p1(:,:,i+1)-mmz(:,:,i+1));


            case 1
                mmxtmpd_pre(:,:,i)=atomtype_layer2blue.*(-mmx_0p2(:,:,i+1)-...
                    mmx_n10(:,:,i+1)-mmx_p10(:,:,i+1)+...
                    mmx_0n1(:,:,i+1)+mmx_n1p1(:,:,i+1)+...
                    mmx_p1p1(:,:,i+1))-...
                    atomtype_layer2p.*(mmx_0n1(:,:,i+1)+...
                    mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1)-mmx(:,:,i+1));
                mmytmpd_pre(:,:,i)=atomtype_layer2blue.*(-mmy_0p2(:,:,i+1)-...
                    mmy_n10(:,:,i+1)-mmy_p10(:,:,i+1)+...
                    mmy_0n1(:,:,i+1)+mmy_n1p1(:,:,i+1)+...
                    mmy_p1p1(:,:,i+1))-...
                    atomtype_layer2p.*(mmy_0n1(:,:,i+1)+...
                    mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1)-mmy(:,:,i+1));
                mmztmpd_pre(:,:,i)=atomtype_layer2blue.*(-mmz_0p2(:,:,i+1)-...
                    mmz_n10(:,:,i+1)-mmz_p10(:,:,i+1)+...
                    mmz_0n1(:,:,i+1)+mmz_n1p1(:,:,i+1)+...
                    mmz_p1p1(:,:,i+1))-...
                    atomtype_layer2p.*(mmz_0n1(:,:,i+1)+...
                    mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1)-mmz(:,:,i+1));

                mmxtmpd_nex(:,:,i)=atomtype_layer2p.*(mmx_0n1(:,:,i-1)+...
                    mmx_n1p1(:,:,i-1)+mmx_p1p1(:,:,i-1)-...
                    mmx_0p1(:,:,i-1)-mmx_n1n1(:,:,i-1)-...
                    mmx_p1n1(:,:,i-1))+...
                    atomtype_layer2blue.*(mmx_0p2(:,:,i-1)+...
                    mmx_n10(:,:,i-1)+mmx_p10(:,:,i-1)-mmx(:,:,i-1));
                mmytmpd_nex(:,:,i)=atomtype_layer2p.*(mmy_0n1(:,:,i-1)+...
                    mmy_n1p1(:,:,i-1)+mmy_p1p1(:,:,i-1)-...
                    mmy_0p1(:,:,i-1)-mmy_n1n1(:,:,i-1)-...
                    mmy_p1n1(:,:,i-1))+...
                    atomtype_layer2blue.*(mmy_0p2(:,:,i-1)+...
                    mmy_n10(:,:,i-1)+mmy_p10(:,:,i-1)-mmy(:,:,i-1));
                mmztmpd_nex(:,:,i)=atomtype_layer2p.*(mmz_0n1(:,:,i-1)+...
                    mmz_n1p1(:,:,i-1)+mmz_p1p1(:,:,i-1)-...
                    mmz_0p1(:,:,i-1)-mmz_n1n1(:,:,i-1)-...
                    mmz_p1n1(:,:,i-1))+...
                    atomtype_layer2blue.*(mmz_0p2(:,:,i-1)+...
                    mmz_n10(:,:,i-1)+mmz_p10(:,:,i-1)-mmz(:,:,i-1));
            case 2%layer end do not have the i+1 layer interaction
                if i==natomH
                    mmxtmpd_pre(:,:,i)=0;
                    mmytmpd_pre(:,:,i)=0;
                    mmztmpd_pre(:,:,i)=0;
                else
                    mmxtmpd_pre(:,:,i)=(-atomtype_layer3red.*(mmx_0n2(:,:,i+1)+...
                        mmx_n10(:,:,i+1)+mmx_p10(:,:,i+1)-mmx(:,:,i+1))+...
                        atomtype_layer3black.*(mmx_0n1(:,:,i+1)+...
                        mmx_n1p1(:,:,i+1)+mmx_p1p1(:,:,i+1)-...
                        mmx_0p1(:,:,i+1)-mmx_n1n1(:,:,i+1)-...
                        mmx_p1n1(:,:,i+1)));
                    mmytmpd_pre(:,:,i)=(-atomtype_layer3red.*(mmy_0n2(:,:,i+1)+...
                        mmy_n10(:,:,i+1)+mmy_p10(:,:,i+1)-mmy(:,:,i+1))+...
                        atomtype_layer3black.*(mmy_0n1(:,:,i+1)+...
                        mmy_n1p1(:,:,i+1)+mmy_p1p1(:,:,i+1)-...
                        mmy_0p1(:,:,i+1)-mmy_n1n1(:,:,i+1)-...
                        mmy_p1n1(:,:,i+1)));
                    mmztmpd_pre(:,:,i)=(-atomtype_layer3red.*(mmz_0n2(:,:,i+1)+...
                        mmz_n10(:,:,i+1)+mmz_p10(:,:,i+1)-mmz(:,:,i+1))+...
                        atomtype_layer3black.*(mmz_0n1(:,:,i+1)+...
                        mmz_n1p1(:,:,i+1)+mmz_p1p1(:,:,i+1)-...
                        mmz_0p1(:,:,i+1)-mmz_n1n1(:,:,i+1)-...
                        mmz_p1n1(:,:,i+1)));
                end
                mmxtmpd_nex(:,:,i)=atomtype_layer3red.*(mmx_0n2(:,:,i-1)+...
                    mmx_n10(:,:,i-1)+mmx_p10(:,:,i-1)-...
                    mmx_0p1(:,:,i-1)-mmx_n1n1(:,:,i-1)-...
                    mmx_p1n1(:,:,i-1))+...
                    atomtype_layer3black.*(mmx_0p1(:,:,i-1)+...
                    mmx_n1n1(:,:,i-1)+mmx_p1n1(:,:,i-1)-mmx(:,:,i-1));
                mmytmpd_nex(:,:,i)=atomtype_layer3red.*(mmy_0n2(:,:,i-1)+...
                    mmy_n10(:,:,i-1)+mmy_p10(:,:,i-1)-...
                    mmy_0p1(:,:,i-1)-mmy_n1n1(:,:,i-1)-...
                    mmy_p1n1(:,:,i-1))+...
                    atomtype_layer3black.*(mmy_0p1(:,:,i-1)+...
                    mmy_n1n1(:,:,i-1)+mmy_p1n1(:,:,i-1)-mmy(:,:,i-1));
                mmztmpd_nex(:,:,i)=atomtype_layer3red.*(mmz_0n2(:,:,i-1)+...
                    mmz_n10(:,:,i-1)+mmz_p10(:,:,i-1)-...
                    mmz_0p1(:,:,i-1)-mmz_n1n1(:,:,i-1)-...
                    mmz_p1n1(:,:,i-1))+...
                    atomtype_layer3black.*(mmz_0p1(:,:,i-1)+...
                    mmz_n1n1(:,:,i-1)+mmz_p1n1(:,:,i-1)-mmz(:,:,i-1));

            otherwise
                error('unexpected index');
        end
    end

    if DMIenable
        dmi2()
        mmxtmpd_nex=mmxtmpd_nex.*atomtype_;
        mmytmpd_nex=mmytmpd_nex.*atomtype_;
        mmztmpd_nex=mmztmpd_nex.*atomtype_;
        mmxtmpd_pre=mmxtmpd_pre.*atomtype_;
        mmytmpd_pre=mmytmpd_pre.*atomtype_;
        mmztmpd_pre=mmztmpd_pre.*atomtype_;

        hdmi_x=Dsim./muigpu.*(mmytmpd_nex+mmytmpd_pre);%[T]
        hdmi_y=-Dsim./muigpu.*(mmxtmpd_nex+mmxtmpd_pre);
        hdmi_z=zeros(size(hex_x,1),size(hex_x,2),size(hex_x,3));
    end
end
hhx=hex_x+hdmi_x+Hext(1)+hani_x+hdipo_x;
hhy=hex_y+hdmi_y+Hext(2)+hani_y+hdipo_y;
hhz=hex_z+hdmi_z+Hext(3)+hani_z+hdipo_z;
